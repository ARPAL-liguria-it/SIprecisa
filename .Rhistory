value_digits[[1]][[2]])
value_decimals <- nchar(decimals)
# checking if the number is scientific notation
is_scientific <- "e" %in% strsplit(decimals, "")[[1]]
ndigits <- ifelse(is_scientific, 0, value_decimals)
ndigits
} else {
ndigits <- 0
ndigits
}
}
}
#' Formatting a number with a given number of significant figures
#'
#' @description The function returns a character values with a number formatted
#' with the desired significant figures
#'
#' @param number the input number to be formatted
#' @param sigfig an integer with the number of desired significant figures
#'
#' @return a character value with the number formatted with the desired
#' significant figures
#'
#' @noRd
format_sigfig <- function(number, sigfig = 4L){
stopifnot(
is.numeric(number),
is.integer(sigfig)
)
sprintf("%.*f", signiftodigits(number, sigfig), number)
}
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
rowsummary_riprec <- function(data,
response,
udm = "",
signif = 3L) {
stopifnot(
is.data.frame(data),
is.character(response),
is.character(udm),
all.equal(signif, as.integer(signif)),
response %in% colnames(data),
"outlier" %in% colnames(data)
)
statistica <- NULL
mydata <- data.table::data.table(data)
lvl <- levels("misure")
roworder <- c("n", "n esclusi", "massimo", "media", "mediana", "minimo")
fm <- as.formula("statistica ~ .")
# calculate the summary
mysummary <- mydata[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(response, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(response, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(response, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(response, na.rm = TRUE) #|> format_sigfig(signif)
)][,
# table with three columns
"statistica" := rep(roworder, length(lvl))] |>
data.table::dcast(eval(fm), value.var = response) |>
# reordering rows
(\(x) x[roworder])()
# adding unit of measurement
mysummary[, "statistica" := lapply(statistica, (\(x) {
ifelse(x != {"n" || "n esclusi"} & udm != "", paste0(x, " (", udm, ")"), x)
}))]
}
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
a
rowsummary_riprec <- function(data,
response,
udm = "",
signif = 3L) {
stopifnot(
is.data.frame(data),
is.character(response),
is.character(udm),
all.equal(signif, as.integer(signif)),
response %in% colnames(data),
"outlier" %in% colnames(data)
)
statistica <- NULL
mydata <- data.table::data.table(data)
lvl <- levels("misure")
roworder <- c("n", "n esclusi", "massimo", "media", "mediana", "minimo")
fm <- as.formula("statistica ~ .")
# calculate the summary
mysummary <- mydata[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(response, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(response, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(response, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(response, na.rm = TRUE) #|> format_sigfig(signif)
)][]
#   )][,
#   # table with three columns
#   "statistica" := rep(roworder, length(lvl))] |>
#   data.table::dcast(eval(fm), value.var = response) |>
#   # reordering rows
#   (\(x) x[roworder])()
#
# # adding unit of measurement
#   mysummary[, "statistica" := lapply(statistica, (\(x) {
#     ifelse(x != {"n" || "n esclusi"} & udm != "", paste0(x, " (", udm, ")"), x)
#     }))]
}
a
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
a[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(pippo, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(pippo, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(pippo, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(pippo, na.rm = TRUE) #|> format_sigfig(signif)
)][]
library(data.table)
a[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(pippo, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(pippo, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(pippo, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(pippo, na.rm = TRUE) #|> format_sigfig(signif)
)][]
a[, (
n = .N,
data.table(A)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(pippo, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(pippo, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(pippo, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(pippo, na.rm = TRUE) #|> format_sigfig(signif)
)][]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(pippo, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(pippo, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(pippo, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(pippo, na.rm = TRUE) #|> format_sigfig(signif)
)][]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(pippo, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(pippo, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(pippo, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(pippo, na.rm = TRUE) #|> format_sigfig(signif)
)][] |> dcast()
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(pippo, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(pippo, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(pippo, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(pippo, na.rm = TRUE) #|> format_sigfig(signif)
)][] |> melt()
data.table(a)[, .(
n = .N,
`n esclusi` = sum(out),
massimo = max(res, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(res, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(res, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(res, na.rm = TRUE), eval = list(out = "outlier", res = "pippo") #|> format_sigfig(signif)
)][] |> melt()
data.table(a)[, .(
n = .N,
`n esclusi` = sum(out),
massimo = max(res, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(res, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(res, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(res, na.rm = TRUE), env = list(out = "outlier", res = "pippo") #|> format_sigfig(signif)
)][] |> melt()
data.table(a)[, .(
n = .N,
`n esclusi` = sum(out),
massimo = max(res, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(res, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(res, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(res, na.rm = TRUE)), env = list(out = "outlier", res = "pippo" #|> format_sigfig(signif)
)][] |> melt()
data.table(a)[, .(
n = .N,
`n esclusi` = sum(out),
massimo = max(res, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(res, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(res, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(res, na.rm = TRUE)), env = list(out = "outlier", res = "pippo") #|> format_sigfig(signif)
)][] |> melt()
data.table(a)[, .(
n = .N,
`n esclusi` = sum(out),
massimo = max(res, na.rm = TRUE),
media = mean(res, na.rm = TRUE),
mediana = stats::median(res, na.rm = TRUE),
minimo = min(res, na.rm = TRUE)), env = list(out = "outlier", res = "pippo")][] |> melt()
as.data.table(iris)[filter_col %in% filter_val,
.(var1, var2, out = outer(inner(var1) + inner(var2))),
by = by_col,
env = list(
outer = "sqrt",
inner = "square",
var1 = "Sepal.Length",
var2 = "Sepal.Width",
out = "Sepal.Hypotenuse",
filter_col = "Species",
filter_val = I(c("versicolor", "virginica")),
by_col =  "Species"
)]
install.packages(c("btergm", "curl", "dbplyr", "DEoptimR", "DT", "epiR", "evaluate", "fansi", "gert", "gt", "htmltools", "hunspell", "kit", "lubridate", "markdown", "metafor", "plyr", "polyclip", "RMySQL", "rsconnect", "sp", "testthat", "tinytex", "vroom", "withr"))
install.packages("lattice", lib="C:/Users/andrea.bazzano/AppData/Local/Programs/R/R-4.2.1/library")
as.data.table(iris)[filter_col %in% filter_val,
.(var1, var2, out = outer(inner(var1) + inner(var2))),
by = by_col,
env = list(
outer = "sqrt",
inner = "square",
var1 = "Sepal.Length",
var2 = "Sepal.Width",
out = "Sepal.Hypotenuse",
filter_col = "Species",
filter_val = I(c("versicolor", "virginica")),
by_col =  "Species"
)]
data.table::as.data.table(iris)[filter_col %in% filter_val,
.(var1, var2, out = outer(inner(var1) + inner(var2))),
by = by_col,
env = list(
outer = "sqrt",
inner = "square",
var1 = "Sepal.Length",
var2 = "Sepal.Width",
out = "Sepal.Hypotenuse",
filter_col = "Species",
filter_val = I(c("versicolor", "virginica")),
by_col =  "Species"
)]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(get(outlier)),
massimo = max(get(response), na.rm = TRUE),
media = mean(get(response), na.rm = TRUE),
mediana = stats::median(get(response), na.rm = TRUE),
minimo = min(get(response), na.rm = TRUE))][] |> melt()
data.table(a)[, .(
n = .N,
`n esclusi` = sum(get(outlier)),
massimo = max(get(response), na.rm = TRUE),
media = mean(get(response), na.rm = TRUE),
mediana = stats::median(get(response), na.rm = TRUE),
minimo = min(get(response), na.rm = TRUE))][]
library(data.table)
data.table(a)[, .(
n = .N,
`n esclusi` = sum(get(outlier)),
massimo = max(get(response), na.rm = TRUE),
media = mean(get(response), na.rm = TRUE),
mediana = stats::median(get(response), na.rm = TRUE),
minimo = min(get(response), na.rm = TRUE))][] |> melt()
rowsummary_riprec <- function(data,
response,
udm = "",
signif = 3L) {
stopifnot(
is.data.frame(data),
is.character(response),
is.character(udm),
all.equal(signif, as.integer(signif)),
response %in% colnames(data),
"outlier" %in% colnames(data)
)
statistica <- NULL
mydata <- data.table::data.table(data)
lvl <- levels("misure")
roworder <- c("n", "n esclusi", "massimo", "media", "mediana", "minimo")
fm <- as.formula("statistica ~ .")
# calculate the summary
mysummary <- mydata[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(.SD, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(.SD, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(.SD, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(.SD, na.rm = TRUE) #|> format_sigfig(signif)
),
.SDcols = response] |>
melt() |>
(\(x) x[roworder])()
colnames(mysummary) <- c("statistica", "misure")
# adding unit of measurement
mysummary[, "statistica" := lapply(statistica, (\(x) {
ifelse(x != {"n" || "n esclusi"} & udm != "", paste0(x, " (", udm, ")"), x)
}))]
}
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
a
res <- "pippo"
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(.SD, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(.SD, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(.SD, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(.SD, na.rm = TRUE) #|> format_sigfig(signif)
),
.SDcols = res]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(.SD, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(.SD, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(.SD, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(.SD, na.rm = TRUE) #|> format_sigfig(signif)
), .SDcols = res]
res
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(pippo, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(pippo, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(pippo, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(pippo, na.rm = TRUE) #|> format_sigfig(signif)
)]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(.SD, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(.SD, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(.SD, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(.SD, na.rm = TRUE) #|> format_sigfig(signif)
), .SDcols = list(res)]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(.SD, na.rm = TRUE), #|> format_sigfig(signif),
media = mean(.SD, na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(.SD, na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(.SD, na.rm = TRUE) #|> format_sigfig(signif)
), .SDcols = res]
data.table(a)[, (
n = .N,
data.table(a)[, (
n = .N,
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(get(res)), na.rm = TRUE), #|> format_sigfig(signif),
media = mean(get(res), na.rm = TRUE), #|> format_sigfig(signif),
mediana = stats::median(get(res), na.rm = TRUE), #|> format_sigfig(signif),
minimo = min(get(res), na.rm = TRUE))]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(get(res)), na.rm = TRUE),
media = mean(get(res), na.rm = TRUE),
mediana = stats::median(get(res), na.rm = TRUE),
minimo = min(get(res), na.rm = TRUE))]
data.table(a)[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(get(res), na.rm = TRUE),
media = mean(get(res), na.rm = TRUE),
mediana = stats::median(get(res), na.rm = TRUE),
minimo = min(get(res), na.rm = TRUE))]
rowsummary_riprec <- function(data,
response,
udm = "",
signif = 3L) {
stopifnot(
is.data.frame(data),
is.character(response),
is.character(udm),
all.equal(signif, as.integer(signif)),
response %in% colnames(data),
"outlier" %in% colnames(data)
)
statistica <- NULL
mydata <- data.table::data.table(data)
lvl <- levels("misure")
roworder <- c("n", "n esclusi", "massimo", "media", "mediana", "minimo")
fm <- as.formula("statistica ~ .")
# calculate the summary
mysummary <- mydata[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(get(response), na.rm = TRUE) |> format_sigfig(signif),
media = mean(get(response), na.rm = TRUE) |> format_sigfig(signif),
mediana = stats::median(get(response), na.rm = TRUE) |> format_sigfig(signif),
minimo = min(get(response), na.rm = TRUE) |> format_sigfig(signif)
)] |>
melt() |>
(\(x) x[roworder])()
colnames(mysummary) <- c("statistica", "misure")
# adding unit of measurement
mysummary[, "statistica" := lapply(statistica, (\(x) {
ifelse(x != {"n" || "n esclusi"} & udm != "", paste0(x, " (", udm, ")"), x)
}))]
}
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
rowsummary_riprec <- function(data,
response,
udm = "",
signif = 3L) {
stopifnot(
is.data.frame(data),
is.character(response),
is.character(udm),
all.equal(signif, as.integer(signif)),
response %in% colnames(data),
"outlier" %in% colnames(data)
)
statistica <- NULL
mydata <- data.table::data.table(data)
lvl <- levels("misure")
roworder <- c("n", "n esclusi", "massimo", "media", "mediana", "minimo")
fm <- as.formula("statistica ~ .")
# calculate the summary
mysummary <- mydata[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(get(response), na.rm = TRUE) |> format_sigfig(signif),
media = mean(get(response), na.rm = TRUE) |> format_sigfig(signif),
mediana = stats::median(get(response), na.rm = TRUE) |> format_sigfig(signif),
minimo = min(get(response), na.rm = TRUE) |> format_sigfig(signif)
)] |>
melt() #|>
(\(x) x[roworder])()
# colnames(mysummary) <- c("statistica", "misure")
# adding unit of measurement
# mysummary[, "statistica" := lapply(statistica, (\(x) {
#   ifelse(x != {"n" || "n esclusi"} & udm != "", paste0(x, " (", udm, ")"), x)
#   }))]
}
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
rowsummary_riprec <- function(data,
response,
udm = "",
signif = 3L) {
stopifnot(
is.data.frame(data),
is.character(response),
is.character(udm),
all.equal(signif, as.integer(signif)),
response %in% colnames(data),
"outlier" %in% colnames(data)
)
statistica <- NULL
mydata <- data.table::data.table(data)
lvl <- levels("misure")
roworder <- c("n", "n esclusi", "massimo", "media", "mediana", "minimo")
fm <- as.formula("statistica ~ .")
# calculate the summary
mysummary <- mydata[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(get(response), na.rm = TRUE) |> format_sigfig(signif),
media = mean(get(response), na.rm = TRUE) |> format_sigfig(signif),
mediana = stats::median(get(response), na.rm = TRUE) |> format_sigfig(signif),
minimo = min(get(response), na.rm = TRUE) |> format_sigfig(signif)
)] |>
melt() #|>
#(\(x) x[roworder])()
# colnames(mysummary) <- c("statistica", "misure")
# adding unit of measurement
# mysummary[, "statistica" := lapply(statistica, (\(x) {
#   ifelse(x != {"n" || "n esclusi"} & udm != "", paste0(x, " (", udm, ")"), x)
#   }))]
}
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
rowsummary_riprec <- function(data,
response,
udm = "",
signif = 3L) {
stopifnot(
is.data.frame(data),
is.character(response),
is.character(udm),
all.equal(signif, as.integer(signif)),
response %in% colnames(data),
"outlier" %in% colnames(data)
)
statistica <- NULL
mydata <- data.table::data.table(data)
lvl <- levels("misure")
roworder <- c("n", "n esclusi", "massimo", "media", "mediana", "minimo")
fm <- as.formula("statistica ~ .")
# calculate the summary
mysummary <- mydata[, .(
n = .N,
`n esclusi` = sum(outlier),
massimo = max(get(response), na.rm = TRUE) |> format_sigfig(signif),
media = mean(get(response), na.rm = TRUE) |> format_sigfig(signif),
mediana = stats::median(get(response), na.rm = TRUE) |> format_sigfig(signif),
minimo = min(get(response), na.rm = TRUE) |> format_sigfig(signif)
)][]# |>
#  melt() #|>
#(\(x) x[roworder])()
# colnames(mysummary) <- c("statistica", "misure")
# adding unit of measurement
# mysummary[, "statistica" := lapply(statistica, (\(x) {
#   ifelse(x != {"n" || "n esclusi"} & udm != "", paste0(x, " (", udm, ")"), x)
#   }))]
}
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")[]
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")[] |> melt()
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")
rowsummary_riprec(data = a, response = "pippo", udm = "ng/ml")[]
